function CheckBoxControl(){Base.apply(this,arguments);}CheckBoxControl.Inherit(Base,"CheckBoxControl");CheckBoxControl.Implement(IUIControl);CheckBoxControl.Implement(ICustomParameterization);CheckBoxControl.Implement(IDisablable);CheckBoxControl.Implement(IFreezable);CheckBoxControl.Implement(ITemplateSourceImpl,new Defaults("templateName","bindkraft/control-checkbox"));CheckBoxControl.$defaults={templateName:"bindkraft/control-checkbox"};CheckBoxControl.$rootParametersSet=["disabled","value"];CheckBoxControl.prototype.setObjectParameter=function(name,value){if(name.inSet(CheckBoxControl.$rootParametersSet))return true;return false;};CheckBoxControl.ImplementActiveProperty("value",new InitializeStringParameter("Choose to which field to bind to.",null));CheckBoxControl.Implement.$disabled=new InitializeStringParameter("Choose to which field to bind to.",null);CheckBoxControl.prototype.checkedchangedevent=new InitializeEvent("Fired every time the checkbox check is changed");CheckBoxControl.prototype.init=function(){$$(this.root).first().empty().append(this.get_template());};CheckBoxControl.prototype.onCheckedChanged=function(sender,dc){if(dc!=null){this.set_value(dc);this.checkedchangedevent.invoke(this,dc);}};CheckBoxControl.prototype.obliterate=function(){Base.prototype.obliterate.call(this);};