function WindowingMessage(eventType,eventData,targetWindow,sourceWindow){BaseObject.apply(this,arguments);this.type=eventType;this.data=eventData;this.target=targetWindow;this.source=sourceWindow;}WindowingMessage.Inherit(BaseObject,"WindowingMessage");WindowingMessage.Implement(IDispatchable);WindowingMessage.Implement(ITargeted);WindowingMessage.Implement(IDataHolder);WindowingMessage.prototype.get_target=function(){return this.target;};WindowingMessage.prototype.get_data=function(){return this.data;};WindowingMessage.prototype.set_data=function(v){this.data=v;};WindowingMessage.fireOn=function(wnd,evntType,evntData){if(wnd!=null&&BaseObject.is(wnd,"BaseWindow")){var e=new WindowingMessage(evntType,evntData,wnd);return wnd.$handleWindowEvent(e);}return null;};WindowingMessage.sendTo=function(wnd,evntType,evntData){var msg=new WindowingMessage(evntType,evntData,wnd);msg.dispatchOn(wnd);return msg;};WindowingMessage.postTo=function(wnd,evntType,evntData){var msg=new WindowingMessage(evntType,evntData,wnd);return EventPump.Default().trackPost(msg);}.Returns("IAsyncResult that can be used for tracking the progress");WindowingMessage.broadcastTo=function(wnd,a1,a2,a3){var cond=null;var action=null;var data=null;var msg;for(var i=1;i<arguments.length;i++){if(BaseObject.isCallback(arguments[i])){if(action==null){action=arguments[i];}else if(cond==null){cond=arguments[i];}else{throw"More than 2 callbacks have been passed to broadcastTo, don't know what to do with them.";}}else{data=arguments[i];}}if(action!=null||cond!=null){msg=new WindowingMessage(WindowEventEnum.BroadcastAction,{condition:cond,action:action,data:data},wnd);}else{msg=new WindowingMessage(WindowEventEnum.Broadcast,data,wnd);}return EventPump.Default().trackPost(msg);}.Returns("IAsyncResult that can be used for tracking the progress");WindowingMessage.prototype.type=null;WindowingMessage.prototype.handled=false;WindowingMessage.prototype.result=undefined;WindowingMessage.prototype.data=new InitializeObject("Event data");WindowingMessage.prototype.dispatchOn=function(obj){if(BaseObject.is(obj,"BaseWindow")){if(typeof obj.$handleWindowEvent=="function"){return obj.$handleWindowEvent(this);}}return null;};WindowingMessage.prototype.dispatch=function(){return this.dispatchOn(this.target);};WindowingMessage.prototype.compareDispatchTarget=function(wnd){if(this.target==wnd)return true;return false;};