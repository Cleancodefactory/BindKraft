function CustomFormatterBase(){BaseObject.apply(this,arguments);var me=this;this.ToTarget=function(val,bind,args){return me.$ToTarget(this,val,bind,args);};this.FromTarget=function(val,bind,args){return me.$FromTarget(this,val,bind,args);};}CustomFormatterBase.Inherit(BaseObject,"CustomFormatterBase");CustomFormatterBase.Implement(IFormatter);CustomFormatterBase.prototype.errorIfNeeded=function(bind,text){if(bind!=null){throw"Critical error while formatting: "+text;}};CustomFormatterBase.prototype.$parseArguments=function(_args){var args;if(this.is(IParametersAccumulator)){args=this.getAccumulatedParameters(null)||_args;}else{args=_args;}if(this.is("IArgumentListParser")){return this.parseArgumentList(args);}else{return args;}};CustomFormatterBase.prototype.$ToTarget=function(host,val,bind,args){var arr=Array.createCopyOf(arguments,0,3);var farg=this.$parseArguments(args);arr.push(farg);return this.Read.apply(this,arr);};CustomFormatterBase.prototype.$FromTarget=function(host,val,bind,args){var arr=Array.createCopyOf(arguments,0,3);var farg=this.$parseArguments(args);arr.push(farg);return this.Write.apply(this,arr);};CustomFormatterBase.prototype.Read=function(host,val,bind,params){throw"Read not implemented in formatter "+this.fullClassType();}.Description("Implements conversion while reading to target").Param("host","The host object to which this is attached. Can be considered as a second this - the one of the exposing instance").Param("val","The raw source value").Param("bind","The reference to the binding in which this is defined. If it isn't called through binding this argument will be null").Param("params","Depending on the argument list parser, without one it is string or null. For other choices implement IArgumentListParserStdImpl").Returns("The converted/collected/formatted value");CustomFormatterBase.prototype.Write=function(host,val,bind,params){throw"Write not implemented in formatter "+this.fullClassType();}.Description("Implements conversion while writting to source").Param("host","The host object to which this is attached. Can be considered as a second this - the one of the exposing instance").Param("val","The raw value read from the target or passed directly (if not used in binding)").Param("bind","The reference to the binding in which this is defined. If it isn't called through binding this argument will be null").Param("params","Depending on the argument list parser, without one it is string or null. For other choices implement IArgumentListParserStdImpl").Returns("The converted/collected/parsed value");