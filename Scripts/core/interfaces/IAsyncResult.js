function IAsyncResult(){}IAsyncResult.Interface("IAsyncResult");IAsyncResult.prototype.isCompleted=function(){};IAsyncResult.prototype.isSingleCompleted=function(){};IAsyncResult.prototype.completedevent=null;IAsyncResult.prototype.singlecompletedevent=null;IAsyncResult.prototype.then=function(handler_or_this,handler_or_nothing){return this;};IAsyncResult.prototype.ownerObject=null;IAsyncResult.prototype.setComplete=function(){};IAsyncResult.prototype.chainResult=function(aresult){};IAsyncResult.prototype.unchainResult=function(aresult){};IAsyncResult.prototype.get_scheduler=function(){throw"not implemented";};IAsyncResult.prototype.set_scheduler=function(v){throw"not implemented";};IAsyncResult.prototype.$task=null;IAsyncResult.prototype.get_task=function(){return this.$task;};IAsyncResult.prototype.set_task=function(t){if(this.isSingleCompleted())throw"The async result is done, nothing can be changed in it";if(t!=null&&!BaseObject.is(t,"IDispatchable")){throw"The task must be IDispatchable";}this.$task=t;};IAsyncResult.prototype.get_key=function(){return this.$key;};IAsyncResult.prototype.set_key=function(v){this.$key=v;};IAsyncResult.prototype.get_syncdata=function(){return this.$syncdata;};IAsyncResult.prototype.set_syncdata=function(v){this.$syncdata=v;};IAsyncResult.prototype.scheduleDependent=function(task){};IAsyncResult.prototype.isScheduled=false;IAsyncResult.prototype.scheduleOptions=0;IAsyncResult.prototype.set_scheduled=function(v){throw"Not implemented";};IAsyncResult.prototype.get_scheduled=function(){return this.isScheduled;};IAsyncResult.prototype.$executing=false;IAsyncResult.prototype.$set_executing=function(v){this.$executing=v;};IAsyncResult.prototype.get_executing=function(){return this.$executing;};IAsyncResult.prototype.schedule=function(){throw"Not implemented";};IAsyncResult.prototype.unschedule=function(){throw"Not implemented";};function ICancellable(){}ICancellable.Interface("ICancellable");ICancellable.prototype.cancel=function(bFull){};ICancellable.prototype.isCancelled=function(){};