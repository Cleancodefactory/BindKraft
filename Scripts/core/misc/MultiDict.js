function MultiDict(mdfrom){BaseObject.apply(this,arguments);if(BaseObject.is(mdfrom,this.classType())){this.$keys=mdfrom.get();}};MultiDict.Inherit(BaseObject,"MultiDict");MultiDict.Implement(IUsingValueCheckersImpl);MultiDict.ImplementProperty("keycheck",new Initialize("Optional checker for the keys used",null));MultiDict.prototype.$keys=new InitializeObject("All keys go here and hold arrays of values");MultiDict.prototype.$patchArray=function(_arr){var arr;if(BaseObject.is(_arr,"Array")){arr=Array.createCopyOf(_arr);}else{arr=[];}arr.toString=function(){return arr.join(",");};return arr;}.Description("USed internaly to change the toString method of the returned arrays to comma separated lists");MultiDict.prototype.enumKeys=function(callback){if(BaseObject.isCallback(callback)){for(var k in this.$keys){if(this.$keys.hasOwnProperty(k)){if(BaseObject.callCallback(callback,k,this.$keys[k])===false)return this;}}}return this;};MultiDict.prototype.keys=function(pat){var r=[];if(BaseObject.is(pat,"IValueChecker")){for(var k in this.$keys){if(this.$keys.hasOwnProperty(k)&&pat.checkValue(k)){r.push(k);}}}else if(pat instanceof RegExp){for(var k in this.$keys){if(this.$keys.hasOwnProperty(k)&&pat.test(k)){r.push(k);}}}else{for(var k in this.$keys){if(this.$keys.hasOwnProperty(k)){r.push(k);}}}return r;};MultiDict.prototype.get=function(x,idx){var me=this;if(arguments.length>1){if(!this.checkValueWith(this.get_keycheck(),x))return this.$patchArray([]);if(BaseObject.is(this.$keys[x],"Array")){if(idx>=0&&idx<this.$keys[x].length){return this.$keys[x][idx];}else{return null;}}else{return null;}}else if(arguments.length==0){var co=BaseObject.CombineObjectsProcessed({},this.$keys,function(key,oldItem,newItem){if(BaseObject.is(newItem,"Array")){return me.$patchArray(newItem);}});return co;}else{if(!this.checkValueWith(this.get_keycheck(),x))return this.$patchArray([]);if(this.$keys[x])return this.$patchArray(this.$keys[x]);return this.$patchArray([]);}};MultiDict.prototype.set=function(_k,o){var k=_k+"";if(!this.checkValueWith(this.get_keycheck(),k))throw"Key "+k+" not allowed";if(!this.$keys[k])this.$keys[k]=new Array();var a=this.$keys[k];for(var i=0;i<a.length;i++){if(a[i]===o)return this;if(a[i].equals&&a[i].equals(o))return this;}this.$keys[k]=[o];return this;};MultiDict.prototype.add=function(_k,o){var k=_k+"";if(!this.checkValueWith(this.get_keycheck(),k))throw"Key "+k+" not allowed";if(arguments.length<2)return this;if(!this.$keys[k])this.$keys[k]=new Array();this.$keys[k].push(o);return this;};MultiDict.prototype.addMany=function(_k,o){var k=_k+"";if(!this.checkValueWith(this.get_keycheck(),k))throw"Key "+k+" not allowed";if(arguments.length<2)return this;if(!this.$keys[k])this.$keys[k]=new Array();if(BaseObject.is(o,"Array")){this.$keys[k].push.apply(this.$keys[k],o);}else{this.$keys[k].push(o);}return this;};MultiDict.prototype.remove=function(_k,o){var k=_k+"";if(!this.checkValueWith(this.get_keycheck(),k))return this;if(o==null){delete this.$keys[k];}else{if(this.$keys[k]){var a=this.$keys[k];for(var i=0;i<a.length;i++){if(a[i]===o||a[i].equals&&a[i].equals(o)){a.splice(i,1);return this;}}}}return this;};MultiDict.prototype.clear=function(){this.$keys={};};MultiDict.prototype.isempty=function(){for(var k in this.$keys){if(this.$keys.hasOwnProperty(k)){return false;}}return true;};MultiDict.prototype.equals=function(obj){if(BaseObject.is(obj,this.classType())){var x=this.keys();var y=obj.keys();if(x.length!=y.length)return false;var result=true;this.enumKeys(function(key,content){if(BaseObject.is(content,"Array")){var other=obj.get(key);if(other.length==content.length){for(var i=0;i<other.length;i++){if(content.findElement(other[i])<0){result=false;return false;}}}else{result=false;return false;}}});return result;}return false;};