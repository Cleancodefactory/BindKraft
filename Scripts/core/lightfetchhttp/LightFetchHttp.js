function LightFetchHttp(type,bFillResponseHeaders){BaseObject.apply(this,arguments);if(typeof type=="string"){this.set_expectedContent(type);}var xhr=this.$xhr=new XMLHttpRequest();xhr.onreadystatechange=Delegate.createWrapper(this,this.onReadyStateChange);xhr.ontimeout=Delegate.createWrapper(this,this.onTimeout);}LightFetchHttp.Inherit(BaseObject,"LightFetchHttp");LightFetchHttp.prototype.obliterate=function(){this.$xhr.onreadystatechange=null;this.$xhr.ontimeout=null;this.releaseActiveResult();this.$xhr=null;BaseObject.prototype.obliterate.call(this,null);};LightFetchHttp.$ultimateTimeLimit=600;LightFetchHttp.$returnTypeProcessors={"packetxml":"LightFetchHttpResponsePacketXml"};LightFetchHttp.$requestBodyEncoders={};LightFetchHttp.registerProcessor=function(key,className){if(typeof key=="string"&&key.length>0){if(Class.is(className,"LightFetchHttpRequestBase")){if(this.$requestBodyEncoders[key]!=null){CompileTime.warn("A body encoder has replaced existing registration: "+key);}this.$requestBodyEncoders[key]=Class.getClassName(className);}else if(Class.is(className,"LightFetchHttpResponseBase")){if(this.$returnTypeProcessors[key]!=null){CompileTime.warn("A return type processor has replaced existing registration: "+key);}this.$returnTypeProcessors[key]=Class.getClassName(className);}else{CompileTime.err("LightFetchHttp.registerProcessor accepts classes derived from either LightFetchHttpResponseBase or LightFetchHttpRequestBase.");}}else{CompileTime.err("LightFetchHttp.registerProcessor requires non-empty key for the registered processor");}};LightFetchHttp.prototype.$responseProcessor=null;LightFetchHttp.ImplementProperty("httpuser",new InitializeStringParameter("The user name for http std header",null));LightFetchHttp.ImplementProperty("httppass",new InitializeStringParameter("The password for http std header",null));LightFetchHttp.ImplementProperty("timelimit",new InitializeNumericParameter("The maximum time permitted for the request to complete in seconds, default is 60 seconds",null));LightFetchHttp.ImplementProperty("fillResponseHeaders",new InitializeNumericParameter("Include the response headers in the result",false));LightFetchHttp.ImplementProperty("expectedContent",new InitializeStringParameter("How to process/check the response",""),null,function(oldv,newv){this.$responseProcessor=null;if(newv!=null){if(typeof LightFetchHttp.$returnTypeProcessors[newv]=="string"){var ptype=LightFetchHttp.$returnTypeProcessors[newv];if(Class.is(ptype,"LightFetchHttpResponseBase")){this.$responseProcessor=new(Class(ptype))();}}}});LightFetchHttp.ImplementProperty("withCredentials",new InitializeStringParameter("Send cookies for cors",false));LightFetchHttp.ImplementProperty("queryBoolAsNumber",new InitializeBooleanParameter("When encoding data in query string, if set to true (default) booleans are sent as 0 and 1, otherwise as true/false",true));LightFetchHttp.ImplementProperty("queryMaxDepth",new InitializeNumericParameter("When encoding data in query string, sets the max depth for object traversal, 0 is default",0));LightFetchHttp.ImplementProperty("postDataEncode",new InitializeStringParameter("Specifies how to encode the data for POST, PUT. See docs for available options.","json"));LightFetchHttp.ImplementProperty("postHeaderForMultipart",new InitializeStringParameter("Name of the header to add, set empty to disable","JSONLike-Multipart"));LightFetchHttp.ImplementProperty("postDateFormat",new InitializeStringParameter("Specifies the formatting to use when converting Date to string. Leave null to use the system one. The allowed values are the same as the supported by ConvertDateTime: ISO, MS, TICKS, check its documentation for new ones.",null));LightFetchHttp.prototype.$convertDateToString=function(dt){var enc=this.get_postDateFormat();if(enc==null||/^\s*$/.test(enc)){return this.Unformat("ConvertDateTime",dt);}else{return this.Unformat("ConvertDateTime",dt,null,enc);}};LightFetchHttp.prototype.$plugins=null;LightFetchHttp.prototype.addPlugin=function(plugin){if(!BaseObject.is(plugin,"LightFetchHttpPluginBase"))return false;if(this.$plugins==null)this.$plugins=[];var existing=this.$plugins.FirstOrDefault(function(idx,p){if(p.classDefinition()==plugin.classDefinition())return p;});if(existing!=null)return false;this.$plugins.push(plugin);return true;};LightFetchHttp.prototype.removePlugin=function(plugin_ot_type){if(this.$plugins==null)return false;var cls=Class.getClassDef(plugin_ot_type);for(var i=0;i<this.$plugins.length;i++){if(cls==this.$plugins[i].classDefinition()){this.$plugins.splice(i,1);return true;}}return false;};LightFetchHttp.prototype.removeAllPlugins=function(){this.$plugins=null;};LightFetchHttp.prototype.set_bearerTokens=function(storage){if(storage!=null){if(!BaseObject.is(storage,"IQueryTokenStorage"))throw"set_bearerToken accepts only IQueryTokenStorage as parameter.";var bp=new LightFetchHttpBearerPlugin(storage);return this.addPlugin(bp);}else{this.removePlugin(LightFetchHttpBearerPlugin);}};LightFetchHttp.prototype.$url=null;LightFetchHttp.prototype.get_url=function(){return this.$url;};LightFetchHttp.prototype.set_url=function(url){var bkurl;if(typeof url=="string"){bkurl=new BKUrl(url);}else if(BaseObject.is(url,"BKUrl")){bkurl=url;}else if(url==null){this.$url=null;return true;}else{throw"Unsupported incorrect URL";}if(BaseObject.is(this.$url,"BKUrl")){return this.$url.set_nav(bkurl);}else{this.$url=bkurl;return true;}return false;};LightFetchHttp.prototype.url=function(v){if(arguments.length>0){this.set_url(v);}return this.get_url();};LightFetchHttp.prototype.dataToUrl=function(url,data){return BKUrl.dataToURL(url,data,false,this.get_queryMaxDepth(),this.get_queryBoolAsNumber());};LightFetchHttp.prototype.bodyEncoders={json:function(xhr,data){this.setHeader("Content-Type","application/json;charset=UTF-8");return JSON.stringify(data);},raw:function(xhr,data){return data;},form:function(xhr,data){var url=new BKUrl();BKUrl.dataToURL(url,data,false,this.get_queryMaxDepth(),this.get_queryBoolAsNumber());this.setHeader("Content-Type","application/x-www-form-urlencoded;charset=UTF-8");return url.get_query().composeAsString();},multipart_old:function(xhr,data){var fd=new FormData();var depth=this.get_queryMaxDepth()||0;var booleanAsNumbers=this.get_queryBoolAsNumber();function _cycleObject(prefix,obj,level){if(level>depth)return;var kname;if(typeof obj=="object"&&obj!=null){for(var k in obj){if(prefix.length>0){kname=prefix+"."+k;}else{kname=k;}if(obj.hasOwnProperty(k)){var v=obj[k];if(BaseObject.is(v,"number")){fd.append(kname,v.toString(10));}else if(BaseObject.is(v,"string")){fd.append(kname,v);}else if(BaseObject.is(v,"boolean")){if(booleanAsNumbers){fd.append(kname,v?"1":"0");}else{fd.append(kname,v?"true":"false");}}else if(window.Blob&&v instanceof Blob){if(v instanceof File){fd.append(kname,v,v.name);}else{fd.append(kname,v,"blob.rawobject");}}else if(BaseObject.is(v,"Array")){for(var i=0;i<v.length;i++){var x=v[i];if(typeof x=="number"){x=x.toString(10);}else if(BaseObject.is(x,"string")){x=x;}else if(BaseObject.is(x,"boolean")){x=booleanAsNumbers?x?"1":"0":x?"true":"false";}else if(BaseObject.is(x,"Date")){x=x.toISOString();}else{x=null;}if(x!=null)fd.append(kname,x);}}else if(BaseObject.is(v,"Date")){fd.append(kname,v.toISOString());}else if(Object.prototype.toString.call(v)=="[object Object]"){_cycleObject(kname,v,level+1);}}}}}_cycleObject("",data,0);return fd;},multipart:function(xhr,data){var fd=new FormData();var header=this.get_postHeaderForMultipart();if(header!=null&&header.length>0){this.setHeader(header,"1");}var depth=this.get_queryMaxDepth()||0;var booleanAsNumbers=this.get_queryBoolAsNumber();function _cycleObject(prefix,obj,level){if(level>depth)return;var kname;var i,k,v,t;if(window.FileList&&obj instanceof FileList){for(var i=0;i<obj.length;i++){if(prefix.length>0){kname=prefix+"."+i;}else{kname=k;}v=obj[i];if(window.Blob&&v instanceof Blob){if(v instanceof File){fd.append(kname,v,v.name);}else{fd.append(kname,v,"blob.rawobject");}continue;}}}else if(BaseObject.is(obj,"Array")){for(var i=0;i<obj.length;i++){if(prefix.length>0){kname=prefix+"."+i;}else{kname=k;}v=obj[i];t=typeof v;switch(t){case"number":fd.append(kname,v.toString(10));continue;case"string":fd.append(kname,"'"+v+"'");continue;case"boolean":if(booleanAsNumbers){fd.append(kname,v?"1":"0");}else{fd.append(kname,v?"true":"false");}continue;}if(window.Blob&&v instanceof Blob){if(v instanceof File){fd.append(kname,v,v.name);}else{fd.append(kname,v,"blob.rawobject");}continue;}if(v instanceof Date){fd.append(kname,this.$convertDateToString(v));continue;}if(typeof v=="object"){_cycleObject(kname,v,level+1);continue;}}}else if(typeof obj=="object"&&obj!=null){for(k in obj){if(k.length==0)continue;if(prefix.length>0){kname=prefix+"."+k;}else{kname=k;}if(obj.hasOwnProperty(k)){var v=obj[k];t=typeof v;switch(t){case"number":fd.append(kname,v.toString(10));continue;case"string":fd.append(kname,"'"+v+"'");continue;case"boolean":if(booleanAsNumbers){fd.append(kname,v?"1":"0");}else{fd.append(kname,v?"true":"false");}continue;}if(window.Blob&&v instanceof Blob){if(v instanceof File){fd.append(kname,v,v.name);}else{fd.append(kname,v,"blob.rawobject");}continue;}if(v instanceof Date){fd.append(kname,this.$convertDateToString(v));continue;}if(typeof v=="object"){_cycleObject(kname,v,level+1);continue;}}}}}_cycleObject("",data,0);return fd;}};LightFetchHttp.prototype.finished=new InitializeEvent("Fired when the request finishes");LightFetchHttp.prototype.done=new InitializeEvent("Fired when the request finishes successfuly");LightFetchHttp.prototype.sent=new InitializeEvent("Fired when the request was sent");LightFetchHttp.prototype.progressed=new InitializeEvent("Fired during request to indicate progress");LightFetchHttp.$valueProc=function(){var v="";for(var i=0;i<this.length;i++){if(v.length>0)v+=", ";v+=this[i];}return v;};LightFetchHttp.ValueArray=function(v){if(BaseObject.is(v,"Array")&&v.Value==LightFetchHttp.$valueProc)return v;var va=[];va.Value=LightFetchHttp.$valueProc;return va;};LightFetchHttp.prototype.$method="GET";LightFetchHttp.prototype.get_method=function(){return this.$method;};LightFetchHttp.prototype.set_method=function(v){if(v==null){tihs.$method="GET";}else{this.$method=(v+"").toUpperCase();}};LightFetchHttp.prototype.$headers=new InitializeObject("Headers");LightFetchHttp.prototype.setHeader=function(header,content){this.$headers[header]=content;return this;};LightFetchHttp.prototype.getHeader=function(header){return this.$headers[header];};LightFetchHttp.prototype.onReadyStateChange=function(){if(this.$xhr!=null){if(this.$xhr.readyState==4){if(this.$xhr.status==200){if(this.$op!=null&&!this.$op.isOperationComplete()){this.$op.CompleteOperation(true,this.getResponse());}}else{if(this.$op!=null&&!this.$op.isOperationComplete()){this.$op.CompleteOperation(false,"Communication error, status="+this.$xhr.status);}}}else if(this.$xhr.readyState==2){}else if(this.$xhr.readyState==3){}}};LightFetchHttp.prototype.onTimeout=function(){if(this.$op!=null&&!this.$op.isOperationComplete()){this.$op.CompleteOperation(false,"Timeout");}};LightFetchHttp.prototype.$xhr=null;LightFetchHttp.prototype.$op=null;LightFetchHttp.prototype.$activeresult=null;LightFetchHttp.prototype.releaseActiveResult=function(){if(BaseObject.is(this.$activeresult,"LightFetchHttpActiveResult")){this.$activeresult.release();}this.$activeresult=null;};LightFetchHttp.prototype.isOpened=function(){if(this.$xhr&&this.$xhr.readyState>=1)return true;return false;};LightFetchHttp.prototype.isComplete=function(){if(this.$xhr&&this.$xhr.readyState==4)return true;return false;};LightFetchHttp.prototype.getResponse=function(){if(this.isComplete()){this.discardAsync("cancellrequest");var res={status:{issuccessful:this.$xhr.status==200,httpSuccess:this.$xhr.status==200,httpStatus:this.$xhr.status,httpStatusText:this.$xhr.statusText,headers:{}}};if(res.status.issuccessful){switch(this.get_expectedContent()){case"string":case"text":case"":res.data=this.$xhr.responseText;break;case"data":case"json":try{res.data=JSON.parse(this.$xhr.responseText);}catch(e){res.data=null;}res.datas={"default":res.data};break;case"blob":res.blob=this.$xhr.response;res.blobs={default:this.$xhr.response};break;case"active":res=new LightFetchHttpActiveResult(this);this.$activeresult=res;return res;break;default:if(this.$responseProcessor!=null){var xmsg=this.$responseProcessor.processResponse(this.$xhr,res);if(typeof xmsg=="string"&&xmsg.length>0){res.status.issuccessful=false;res.status.message=xmsg;}}else{res.status.issuccessful=false;res.status.message="Unknown request (response) type";}}}if(this.get_fillResponseHeaders()){res.status.headers=this.getAllResponseHeaders();}return res;}return null;};LightFetchHttp.prototype.getAllResponseHeaders=function(){var headers=String.reGroups2(this.$xhr.getAllResponseHeaders(),/([A-Za-z0-9\-]+)\:\s+(.*)/,"header","value");var result={};var headerVal;for(var i=0;i<headers.length;i++){headerVal=LightFetchHttp.ValueArray(result[headers[i].header]);headerVal.push(headers[i].value);result[headers[i].header]=headerVal;}return result;};LightFetchHttp.prototype.$settimelimit=function(){var tl=this.get_timelimit();if(typeof tl=="number"&&tl<LightFetchHttp.$ultimateTimeLimit){this.async(this.$requestReset).after(tl*1000).key("cancellrequest").execute();}};LightFetchHttp.prototype.$requestReset=function(){if(this.$xhr!=null){this.$xhr.abort();this.$xhr.responseType="";this.releaseActiveResult();if(this.$op!=null){var op=this.$op;this.$op=null;if(!op.isOperationComplete()){op.CompleteOperation(false,"aborted");}}}};LightFetchHttp.prototype.$fetch=function(url,reqdata,bodydata){if(this.$xhr!=null){var i;if(this.isOpened()){this.$requestReset();}this.discardAsync("cancellrequest");this.$op=new Operation();try{var urlString=null;if(BaseObject.is(url,"BKUrl")){if(reqdata!=null){this.dataToUrl(url,reqdata);}urlString=url.composeAsString();}else{throw"The url is not processed";}var xhr=this.$xhr;xhr.open(this.$method,urlString,true,this.$httpuser,this.$httppass);xhr.withCredentials=this.get_withCredentials();var tl=this.get_timelimit();if(typeof tl=="number"&&tl>0){xhr.timeout=tl*1000;}var body=null;if(bodydata!=null){var benc=this.get_postDataEncode();if(typeof benc=="string"){if(typeof this.bodyEncoders[benc]=="function"){body=this.bodyEncoders[benc].call(this,xhr,bodydata);}else if(typeof LightFetchHttp.$requestBodyEncoders[benc]=="string"){var encoderClass=LightFetchHttp.$requestBodyEncoders[benc];if(Class.is(encoderClass,"LightFetchHttpRequestBase")){var encoder=new(Class(encoderClass))();body=encoder.encodeBodyData(xhr,bodydata);}else{throw"Unknown body data encoding "+benc+". There is something registered for this type of encoding, but it is not a LightFetchHttpRequestBase derived class";}}else{throw"Unknown body data encoding "+benc;}}else if(BaseObject.isCallback(benc)){body=BaseObject.callCallback(benc,this,xhr,bodydata);}else{throw"Unexpected value type in postDataEncode. Specify either predefined string encoding name or a callback";}}switch(this.get_expectedContent()){case"blob":xhr.responseType="blob";break;case"text":case"string":xhr.responseType="text";break;default:{if(this.$responseProcessor!=null){this.$responseProcessor.adjustRequest(xhr);}}}if(this.$plugins!=null){for(i=0;i<this.$plugins.length;i++){this.$plugins[i].manipulateRequest(this,xhr,{preparedBody:body,bodyData:bodydata,requestData:reqdata});}}for(var h in this.$headers){if(this.$headers.hasOwnProperty(h)){xhr.setRequestHeader(h,this.$headers[h]);}}xhr.send(body);this.$settimelimit();}catch(ex){if(BaseObject.is(this.$op,"Operation")&&!this.$op.isOperationComplete()){this.$op.CompleteOperation(false,"exception occured: "+ex);}}return this.$op;}return null;};LightFetchHttp.prototype.get=function(url,data,exptype){if(url!=null)this.set_url(url);if(typeof exptype=="string")this.set_expectedContent(exptype);return this.$fetch(this.get_url(),data);};LightFetchHttp.prototype.post=function(url,data,enctype,exptype){this.set_method("POST");if(url!=null)this.set_url(url);if(typeof exptype=="string")this.set_expectedContent(exptype);if(enctype!=null)this.set_postDataEncode(enctype);return this.$fetch(this.get_url(),null,data);};LightFetchHttp.prototype.postEx=function(url,reqdata,data,enctype,exptype){this.set_method("POST");if(url!=null)this.set_url(url);if(typeof exptype=="string")this.set_expectedContent(exptype);if(enctype!=null)this.set_postDataEncode(enctype);return this.$fetch(this.get_url(),reqdata,data);};LightFetchHttp.prototype.reset=function(exptype){this.$requestReset();if(typeof exptype=="string"){this.set_expectedContent(exptype);}};