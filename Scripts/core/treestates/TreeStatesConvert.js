function TreeStatesConvert(map){BaseObject.apply(this,arguments);this.$map=map;}TreeStatesConvert.Inherit(BaseObject,"TreeStatesConvert");TreeStatesConvert.prototype.$map=null;TreeStatesConvert.prototype.linearize=function(arrStates){var r=TreeStatesConvert.LinearizeTSM(this.$map,arrStates);if(TreeStatesConvert.isError(r)){this.LASTERROR(_Errors.compose(),r.text);return null;}return r;}.Description("Converts the array of state objects to array of linearized state values").Param("states","Array of state objects matching the map").Returns("If successful an array of linearized state values, each of them is an array in turn. The result can be empty, on error null is returned and last error set.");TreeStatesConvert.ErrorValue={error:"TreeStatesConvert error"};TreeStatesConvert.Error=function(text,bnofatal){BaseObject.lastError.report(-1,text,"TreeStatesConvert");return{text:text,value:TreeStatesConvert.ErrorValue,nonfatal:bnofatal};};TreeStatesConvert.isError=function(v){if(v!=null&&v.value===TreeStatesConvert.ErrorValue){return true;}return false;};TreeStatesConvert.isNonFatalError=function(v){if(v!=null&&v.value===TreeStatesConvert.ErrorValue&&v.nonfatal){return true;}return false;};TreeStatesConvert.TSEUTypesValid=function(types){if(typeof types!="string"){return this.Error("no types are set for this TSEU");}var arrTypes=types.split(",");if(!BaseObject.is(arrTypes,"Array")||arrTypes.length==0){return this.Error("no types are set for this TSEU");}if(!arrTypes.All(function(idx,itm){return TreeStatesConvert.$reType.test(itm);})){return this.Error("Unsupported type specified in TSEU: "+arrTypes.join(","));}return arrTypes;};TreeStatesConvert.TSEUValFromObject=function(tseu,obj){var name=tseu[0];var types=tseu[1];var arrTypes=TreeStatesConvert.TSEUTypesValid(types);if(this.isError(arrTypes))return arrTypes;var v=obj[name];var vtype=TreeStatesConvert.ValueType(v);if(arrTypes.findElement(vtype)<0){return this.Error("Property "+name+" contains value of type not specified in the TSEU",true);}return v;};TreeStatesConvert.TSEUTestConditions=function(tseu,v){var conditions=tseu[2];if(BaseObject.is(conditions,"Array")){for(var i=0;i<conditions.length;i++){if(conditions[i].invoke(v)===false)return false;}}return true;};TreeStatesConvert.LinearizeTSE=function(tse,obj){var result=[];for(var i=0;i<tse.length;i++){var tseu=tse[i];var val=this.TSEUValFromObject(tseu,obj);if(this.isError(val)){if(this.isNonFatalError(val)){return null;}return val;}if(!this.TSEUTestConditions(tseu,val))return null;result.push(val);}return result;};TreeStatesConvert.LinearizeTSM=function(tsm,objset,_linear){var linear=_linear||[];var i,r;var tses,tse;if(!BaseObject.is(objset,"Array")){return this.Error("You can linearize only object sets - arrays of objects");}if(objset.length==0){return linear;}var initial=false;if(_linear==null)initial=true;if(!initial){var obj=objset[0];if(obj==null||typeof obj!=="object"){return this.Error("Unexpected null or non-object in the object set");}}if(BaseObject.is(tsm,"Array")){if(tsm.length==0){if(object.length>0){return null;}return linear;}if(initial){for(i=0;i<tsm.length;i++){if(!BaseObject.is(tsm[i],"Array"))continue;r=this.LinearizeTSM(tsm[i],objset,linear);if(this.isError(r))return r;if(BaseObject.is(r,"Array")){return r;}}return null;}else{var tses=tsm[0];if(!BaseObject.is(tses,"Array"))return this.Error("TSM error - key TSE at map/submap is not an array");for(i=0;i<tses.length;i++){tse=tses[i];if(BaseObject.is(tse,"Array")){r=this.LinearizeTSE(tse,obj);if(this.isError(r))return r;if(r==null)continue;linear.push(r);if(tsm.length>1){if(tsm[1]==null)return linear;if(BaseObject.is(tsm[1],"Array")){if(tsm[1].length==0)return linear;r=this.LinearizeTSM(tsm[1],objset.slice(1),linear);if(this.isError(r))return r;if(r==null)return null;return linear;}}else{if(objset.length>1){return null;}return linear;}}else{return this.Error("non-TSE found in a submap key. TSES: "+tses.join("'"));}}}}else{if(tsm==null){return linear;}else{return this.Error("TSM must be array");}}};TreeStatesConvert.ValueType=function(v){if(typeof v==="number"&&!isNaN(v)){return"num";}else if(typeof v==="string"){return"string";}else if(typeof v==="boolean"){return"bool";}else if(v==null){return"null";}return null;};TreeStatesConvert.$reType=/^(num|string|bool|null)$/;TreeStatesConvert.Condition=function(condition){if(this.Conditions[condition]!=null){return new Delegate(null,function(v){if(TreeStatesConvert.ValueType(v)!=TreeStatesConvert.Conditions[condition].type)return null;return TreeStatesConvert.Conditions[condition].proc.apply(null,arguments);},Array.createCopyOf(arguments,1));}return null;};TreeStatesConvert.Conditions={range:{type:"num",proc:function(v,low,high){if(typeof low==="number"&&v<low)return false;if(typeof high==="number"&&v>high)return false;return true;}},text:{type:"string",proc:function(v,text){if(v==text)return true;if(v.toUpperCase()==text.toUpperCase())return true;return false;}},number:{type:"num",proc:function(v,number){if(v!=number)return false;return true;}},regex:{type:"string",proc:function(v,re){return re.test(v);}},bool:{type:"bool",proc:function(v,b){if(v!=b)return false;return true;}}};