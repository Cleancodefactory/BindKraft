function EventConnector(bytype_params){BaseObject.apply(this,arguments);var arg;for(var i=0;i<arguments.length;i++){arg=arguments[i];if(BaseObject.is(arg,"IInvocationWithArrayArgs")){this.connectHandler=arg;}else if(i==0&&BaseObject.is(arg,"BaseObject")){this.handlerObject=arg;}else if(BaseObject.is(arg,"string")){this.targetType=arg;}else if(typeof arg=="function"){this.connectHandler=new Delegate(this.handlerObject,arg);}else if(typeof arg=="object"&&!BaseObject.is(arg,"BaseObject")){this.connections=arg;}}};EventConnector.Inherit(BaseObject,"EventConnector");EventConnector.prototype.handlerObject=null;EventConnector.prototype.connectHandler=null;EventConnector.prototype.targetType=null;EventConnector.prototype.connections=null;EventConnector.prototype.obliterate=function(){if(this.connections!=null){for(var k in this.connections){if(this.connections[k]!=null){BaseObject.obliterate(this.connections[k]);}}}if(this.connectHandler!=null)BaseObject.obliterate(this.connectHandler);};EventConnector.prototype.connect=function(target){if(target!=null&&this.connections!=null){if(this.targetType==null||BaseObject.is(target,this.targetType)){var conn;for(var k in this.connections){conn=this.connections[k];if(conn!=null){if(BaseObject.is(target[k],"EventDispatcher")){if(typeof conn=="function"){target[k].add(new Delegate(this.handlerObject,conn));}else{target[k].add(conn);}}else{if(this.targetType!=null)throw"Unsupported by target ("+this.targetType+") event specified";}}}if(this.connectHandler!=null){if(BaseObject.is(this.connectHandler,"IInvoke")){this.connectHandler.invoke(target,true);}else if(typeof this.connectHandler=="function"){this.connectHandler.call(this.handlerObject,target,true);}}}}};EventConnector.prototype.disconnect=function(target){if(target!=null&&this.connections!=null){if(this.targetType==null||BaseObject.is(target,this.targetType)){var conn;for(var k in this.connections){conn=this.connections[k];if(conn!=null){if(BaseObject.is(target[k],"EventDispatcher")){if(typeof conn=="function"){target[k].remove(new Delegate(this.handlerObject,conn));}else{target[k].remove(conn);}}else{if(this.targetType!=null)throw"Unsupported by target ("+this.targetType+") event specified";}}}if(this.connectHandler!=null){if(BaseObject.is(this.connectHandler,"IInvoke")){this.connectHandler.invoke(target,false);}else if(typeof this.connectHandler=="function"){this.connectHandler.call(this.handlerObject,target,false);}}}}};EventConnector.prototype.equals=function(obj){if(obj==this)return true;return false;};