function CommandExecutor(ctxoptional,cmdline,advancedcmdline){BaseObject.apply(this,arguments);if(ctxoptional=="global"){this.set_rootcontext(CommandContext.createGlobal());}else if(BaseObject.is(ctxoptional,"CommandContext")){this.set_rootcontext(ctxoptional);}if(BaseObject.is(cmdline,"CommandLine")){this.$cmdline=cmdline;}else if(typeof cmdline=="string"){this.$cmdline=new CommandLine(cmdline,advancedcmdline);}this.$results=new ResultsStack();}CommandExecutor.Inherit(BaseObject,"CommandExecutor");CommandExecutor.prototype.log_output=function(s){console.log(s);};CommandExecutor.prototype.log_error=function(s){console.log(s);};CommandExecutor.ImplementProperty("interfaceType",new InitializeStringParameter("String or class definition of the execution interface","CommandExecutorInterface"));CommandExecutor.ImplementProperty("lessexceptions",new InitializeBooleanParameter("When true some exception are not thrown and only message is logged to the error output",true));CommandExecutor.prototype.$cmdline=null;CommandExecutor.prototype.get_cmdline=function(){return this.$cmdline;};CommandExecutor.prototype.set_cmdline=function(cmdline){if(BaseObject.is(this.$cmdline,"CommandLine")){throw"The command line cannot be replaced";}if(BaseObject.is(cmdline,"string")){this.$cmdline=new CommandLine(cmdline,false);}else if(BaseObject.is(cmdline,"CommandLine")){this.$cmdline=cmdline;}};CommandExecutor.prototype.$commandContexts=new InitializeArray("Stack of the attached command contexts (CommandContext) - containing the command register, env etc.");CommandExecutor.prototype.$rootContext=null;CommandExecutor.prototype.get_rootcontext=function(){return this.$rootContext;};CommandExecutor.prototype.set_rootcontext=function(v){if(BaseObject.is(v,"CommandContext")){this.$rootContext=v;}else if(BaseObject.is(this.$rootContext,"CommandContext")){throw"Once set the root context cannot be changed";}else{throw"The root context has to be valid context";}};CommandExecutor.prototype.$contextCheck=function(ctx){if(BaseObject.is(ctx,"CommandContext")){return ctx;}else if(BaseObject.is(ctx,"IAppBase")){return new CommandContext(this.get_currentcontext().get_commands(),ctx,this.get_currentcontext().get_environment(),this.get_currentcontext().get_custom());}else if(ctx=="global"){return CommandContext.createGlobal();}else{return null;}};CommandExecutor.prototype.isFunctional=function(){if(BaseObject.is(this.$rootContext,"CommandContext")){return this.$rootContext.isFunctional();}return false;};CommandExecutor.prototype.pushContext=function(_ctx){var ctx=this.$contextCheck(_ctx);if(ctx!=null){if(!BaseObject.is(this.$commandContexts,"Array")){this.$commandContexts=[];}this.$commandContexts.push(ctx);return true;}return false;};CommandExecutor.prototype.pullContext=function(){if(BaseObject.is(this.$commandContexts,"Array")&&this.$commandContexts.length>0){return this.$commandContexts.pop();}else{return this.get_rootcontext();}};CommandExecutor.prototype.get_currentcontext=function(){if(BaseObject.is(this.$commandContexts,"Array")&&this.$commandContexts.length>0){return this.$commandContexts[this.$commandContexts.length-1];}else{if(this.$rootContext!=null){return this.$rootContext;}else{throw"No root context!";}}};CommandExecutor.prototype.get_contextscount=function(){if(BaseObject.is(this.$commandContexts,"Array")&&this.$commandContexts.length>0){return this.$commandContexts.length;}if(BaseObject.is(this.$rootContext,"CommandContext")){return 0;}else{return-1;}};CommandExecutor.prototype.get_currentpos=function(){return this.$cmdline.get_position();};CommandExecutor.prototype.$results=null;CommandExecutor.prototype.findCommand=function(token,meta){var _ctx=this.get_currentcontext();var rctx=this.get_rootcontext();var ctxses;if(!_ctx.get_prioritycommands()){ctxses=[rctx,_ctx];}else{ctxses=[_ctx,rctx];}var cmd=null;for(var i=0;i<ctxses.length&&cmd==null;i++){cmd=ctxses[i].get_commands().find(token,meta);}return cmd;};CommandExecutor.prototype.$commandExecInterface=null;CommandExecutor.prototype.commandExecInterface=function(){if(this.$commandExecInterface==null){this.$commandExecInterface=new InterfaceObject(this,this.get_interfaceType());}return this.$commandExecInterface;};CommandExecutor.prototype.completedOperation=function(success,data_or_error){var op=new Operation();op.CompleteOperation(success,data_or_error);return op;};CommandExecutor.prototype.$step=function(intoken){var op;var token=null;var cl=this.get_cmdline();if(this.$queuedTrapsExist()){var trap=this.$unqueueTrap();if(trap==null){this.$currentTrap=null;return this.completedOperation(true,null);}op=this.$processTrap(trap);if(op===false){return this.completedOperation(true,null);}else if(BaseObject.is(op,"Operation")){return op;}else{var err="CommandExecutor: trap processing returned unexpected result type.";this.log_error("err");return this.completedOperation(false,err);}}else{if(intoken!=null){token=intoken;}else{token=cl.next();}this.$queueStepTraps();if(token==CommandLine.End){op=new FinishOperation();op.CompleteOperation(true,this.$results);if(this.$queuedTrapsExist()){this.log_error("There are some traps registered beyound the command line's end.");}return op;}if(token.meta.type=="string"&&token.meta.subtype=="identifier"){}else{return this.completedOperation(false,"Not an identifier (while looking up the next command)");}var cmd=this.findCommand(token.token,token.meta);var act=null;if(cmd!=null){act=cmd.get_action();if(BaseObject.isCallback(act)){var cmdreturn=BaseObject.callCallback(act,this.get_currentcontext(),this.commandExecInterface());if(BaseObject.is(cmdreturn,"ContinueOperation")){return cmdreturn;}else if(BaseObject.is(cmdreturn,"Operation")){return cmdreturn;}else{return this.completedOperation(true,cmdreturn);}}else{return this.completedOperation(false,"The command does not have an executable action.");}}else{return this.completedOperation(false,"Token is not recognized as a command.");}}};CommandExecutor.prototype.isCommand=function(token){if(token.meta.type=="string"&&token.meta.subtype=="identifier"){var cmd=this.findCommand(token.token,token.meta);if(cmd!=null)return true;}return false;};CommandExecutor.prototype.$inspectResults=function(arg){var me=this;if(BaseObject.is(arg,"ContinueOperation"))return arg;if(BaseObject.is(arg,"Operation")){arg.whencomplete().tell(function(op){var r;if(op.isOperationSuccessful()){r=op.getOperationResult();me.$results.push(r);}else{me.log_error("inspectResults - failed operation completed.");}});return arg;}this.log_error("A non-Operation result from step");return this.completedOperation(true,arg);};CommandExecutor.prototype.step=function(token){var r=this.$step(token);return this.$inspectResults(r);};CommandExecutor.prototype.$executiontraps=new InitializeArray("Various traps inpected on step");CommandExecutor.prototype.$currentTrap=null;CommandExecutor.prototype.$queuedTrapsExist=function(){if(this.$currentTrap!=null){return true;}return false;};CommandExecutor.prototype.$queueStepTraps=function(){var pos=this.get_currentpos();var slot=this.$executiontraps[pos];if(BaseObject.is(slot,"Array")){if(slot.length>0){this.$currentTrap={pos:this.get_currentpos(),traps:slot};}this.$executiontraps[pos]=null;}else{this.$currentTrap=null;}};CommandExecutor.prototype.$addToQueuedTraps=function(){var pos=this.get_currentpos();var slot=this.$executiontraps[pos];if(BaseObject.is(slot,"Array")){this.$executiontraps[pos]=null;if(this.$currentTrap==null){this.$currentTrap={pos:this.get_currentpos(),traps:slot};}else if(BaseObject.is(this.$currentTrap.slot,"Array")){this.$currentTrap.slot.concat(slot);}else{this.log_error("Internal error: Wrong state of the $currentTrap - slot is not an Array.");}}};CommandExecutor.prototype.$unqueueTrap=function(){if(this.$currentTrap!=null){if(BaseObject.is(this.$currentTrap.traps,"Array")){var trap=null,maxtries=0;if(this.$currentTrap.traps.length>0){do{trap=this.$currentTrap.traps.shift();maxtries++;}while(trap==null&&this.$currentTrap.traps.length>0&&maxtries<10);}if(this.$currentTrap.traps.length<=0||maxtries>=10){this.$currentTrap=null;}return trap;}}else{this.$currentTrap=null;}return null;};CommandExecutor.prototype.$registerTrap=function(pos,requestOperation,doneOperation,fulfilldelegate,requestData){if(typeof pos!="number")throw"The traps need to put on positions and the pos argument is not a number";if(!BaseObject.is(requestOperation,"Operation"))throw"$registerTrap requires requestOperation argument of type Operation ot derived";if(!BaseObject.is(doneOperation,"Operation"))throw"$registerTrap requires doneOperation argument of type Operation ot derived. Typically this should be ContinueOperation or FinishOperation.";if(!BaseObject.isCallback(fulfilldelegate))throw"$registerTrap requires fulfilldelegate argument callback that does the actual work.";var trap={position:pos,fulfill:fulfilldelegate,requestOp:requestOperation,doneOp:doneOperation,data:requestData};var slot=this.$executiontraps[pos];if(!BaseObject.is(slot,"Array")){slot=[];this.$executiontraps[pos]=slot;}slot.push(trap);};CommandExecutor.prototype.$processTrap=function(trap){if(trap!=null){if(BaseObject.isCallback(trap.fulfill)){return BaseObject.callCallback(trap.fulfill,trap.pos,trap.requestOp,trap.requestData);}else{throw"No fulfill callback in the trap";}}return false;};CommandExecutor.prototype.$isEndToken=function(token){if(token==CommandLine.End)return true;return false;};CommandExecutor.prototype.cmdNextCommand=function(){};CommandExecutor.prototype.pullNextToken=function(outmetacallback){var token=this.get_cmdline().next();if(this.$isEndToken(token))return null;if(BaseObject.isCallback(outmetacallback)){BaseObject.callCallback(outmetacallback,token.meta);}this.$addToQueuedTraps();return token.token;};CommandExecutor.prototype.pullNextTokenRaw=function(){var token=this.get_cmdline().next();if(this.$isEndToken(token))return null;this.$addToQueuedTraps();return token;};CommandExecutor.prototype.asyncPullNextParamOrValue=function(){throw"not implemented yet";};CommandExecutor.prototype.pushResult=function(r){this.$results.push(r);};CommandExecutor.prototype.pullResult=function(){return this.$results.pull();};CommandExecutor.$Global=null;CommandExecutor.Global=function(){if(this.$Global==null){this.$Global=new CommandExecutor();}};