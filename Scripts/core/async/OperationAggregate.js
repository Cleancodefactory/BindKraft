function OperationAggregate(){var timeout=null;var doseal=true;Operation.call(this,null,timeout);for(var i=0;i<arguments.length;i++){if(BaseObject.is(arguments[i],"Operation")){this.attach(arguments[i]);}else if(BaseObject.is(arguments[i],"Array")){var arr=arguments[i];for(var j=0;j<arr.length;j++){if(BaseObject.is(arr[j],"Operation")){this.attach(arr[j]);}}}else if(i==0&&typeof arguments[0]=="boolean"){doseal=arguments[0];}else if(i==arguments.length-1&&typeof arguments[i]=="number"){timeout=arguments[i];}}if(doseal){this.set_sealed(true);}}OperationAggregate.Inherit(Operation,"OperationAggregate");OperationAggregate.ImplementProperty("sealed",new InitializeBooleanParameter("",false),null,"onForceCheck");OperationAggregate.prototype.$operations=new InitializeArray("Filled with the aggregated operaions");OperationAggregate.prototype.OperationReset=function(){Operation.prototype.OperationReset.apply(this,arguments);this.$sealed=false;return this;};OperationAggregate.prototype.OperationClear=function(){Operation.prototype.OperationClear.apply(this,arguments);this.$sealed=false;this.$operations=[];return this;};OperationAggregate.prototype.seal=function(){this.set_sealed(true);return this;};OperationAggregate.prototype.syncSeal=function(){this.$sealed=true;this.$operationFinished();if(this.isOperationComplete()){return this.isOperationSuccessful()?true:false;}return this;};OperationAggregate.prototype.unseal=function(){this.set_sealed(false);return this;};OperationAggregate.prototype.get_operation=function(idx){if(idx>=0&&idx<this.$operaions.length){return this.$operaions[idx];}return null;};OperationAggregate.prototype.get_alloperations=function(){if(BaseObject.is(this.$operations,"Array")){return Array.createCopyOf(this.$operaions);}return[];};OperationAggregate.prototype.getFiltered=function(callback){if(BaseObject.is(this.$operations,"Array")){if(BaseObject.isCallback(callback)){return this.$operations.Select(function(idx,op){if(BaseObject.callCallback(callback,idx,op)){return op;}return null;});}}return[];};OperationAggregate.prototype.get_completed=function(){return this.getFiltered(function(idx,item){return item.isOperationComplete();});};OperationAggregate.prototype.get_incomplete=function(){return this.getFiltered(function(idx,item){return!item.isOperationComplete();});};OperationAggregate.prototype.get_successful=function(){return this.getFiltered(function(idx,item){return item.isOperationComplete()&&item.isOperationSuccessful();});};OperationAggregate.prototype.get_failed=function(){return this.getFiltered(function(idx,item){return item.isOperationComplete()&&!item.isOperationSuccessful();});};OperationAggregate.prototype.attach=function(_op){var op=_op;if(BaseObject.is(op,"SugaryDispatcher"))op=op.$operation;if(!BaseObject.is(op,"Operation")||this.get_sealed())return false;if(!op.isOperationComplete()){this.$operations.addElement(op);op.whencomplete().tell(new Delegate(this,this.onForceCheck));}else{this.$operations.addElement(op);}return true;};OperationAggregate.prototype.onForceCheck=function(){if(this.get_sealed()){this.callAsync(this.$operationFinished);}};OperationAggregate.prototype.$operationFinished=function(){throw"not implemented - override $operationFinished and check the state of all the operations to determine what happens!";};