function Dispatchable(delegate){BaseObject.apply(this,arguments);this.delegate=delegate;}Dispatchable.Inherit(BaseObject,"Dispatchable");Dispatchable.Implement(IDispatchable);Dispatchable.Implement(ITargeted);Dispatchable.Implement(IDataHolder);Dispatchable.prototype.dispatch=function(asyncResult){if(BaseObject.is(this.delegate,"IInvoke")){this.delegate.invoke();}else if(typeof this.delegate=="function"){this.delegate.call(this);}};Dispatchable.prototype.compareDispatchTarget=function(tgt){if(BaseObject.is(this.delegate,"Delegate")){if(this.delegate.object==tgt)return true;}return false;};Dispatchable.prototype.get_target=function(){if(BaseObject.is(this.delegate,"Delegate")){return this.delegate.object;}return null;};Dispatchable.prototype.callArguments=function(){if(BaseObject.is(this.delegate,"Delegate")){this.delegate.parameters=Array.createCopyOf(arguments);}else{throw"No delegate in this dispatcable";}};Dispatchable.prototype.applyArguments=function(argsArray){if(BaseObject.is(this.delegate,"Delegate")){this.delegate.parameters=Array.createCopyOf(argsArray);}else{throw"No delegate in this dispatcable";}};Dispatchable.prototype.supportsArguments=function(){return true;};