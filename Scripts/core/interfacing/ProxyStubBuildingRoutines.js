var ProxyStubBuildingRoutines={isProxy:function(inst){return BaseObject.is(inst,"$Root_BaseProxy");},refMethod:function(key){return new Function('if (this.$instance != null && this.$instance.__obliterated) { this.$instance = null; }\
							if (this.$instance == null) throw "The proxy is no longer connected";\
							var r = this.$instance.'+key+'.apply(this.$instance, this.$wrapArguments(arguments,"'+key+'"));\
							return this.$wrapResult(r,"'+key+'");');},trivialMethodProxy:function(key){return new Function('return this.$instance.'+key+'.apply(this.$instance, arguments);');},buildProxyClass:function(_baseProxyDef,classDef,ifaceDef,_methodBody){var baseProxyDef=_baseProxyDef||Class.getClassDef($Managed_BaseProxy);if(!Class.is(baseProxyDef,"$Managed_BaseProxy")||!Class.is(classDef,Class.getInterfaceName(ifaceDef))){throw"buildProxyClass requires all its parameters to be non null and of the correct types: $Managed_BaseProxy, class implementing the interface from the next parameter, requestable interface definition";}if(_methodBody!=null&&!BaseObject.isCallback(_methodBody)){throw"A custom method body argument is passed to the buildProxyClass, but it is not a callback";}var methodBody=_methodBody||ProxyStubBuildingRoutines.refMethod;var className=classDef.classType;var proxyName=baseProxyDef.classType;var ifaceName=ifaceDef.classType;var proxyClassName=proxyName+"_"+ifaceName+"_"+className;var cls=Class.getClassDef(proxyClassName);if(cls==null){cls=new Function("instance","transport","builder","container",'$Managed_BaseProxy.call(this,instance,transport,builder,container); return this.$initializeProxy();');cls.Inherit(baseProxyDef,proxyClassName);cls.ImplementEx(ifaceDef);cls.prototype.$proxiedInterface=ifaceDef;for(var key in ifaceDef.prototype){if(key!="constructor"&&key!="Release"&&key!="GetInterface"&&key!="Dereference"&&key.charAt(0)!="$"){if(typeof ifaceDef.prototype[key]=="function"){if(typeof classDef.prototype[key]!="function"){throw"The "+ifaceName+"."+key+" is not implemented as function in "+className+" and a local proxy cannot be created.";}cls.prototype[key]=BaseObject.callCallback(methodBody,key);}else if(BaseObject.is(ifaceDef.prototype[key],"InitializeEvent")){if(!BaseObject.is(classDef.prototype[key],"InitializeEvent")){throw"The event "+ifaceName+"."+key+" is not implemented as event in "+className+" and a local proxy cannot be created.";}cls.prototype[key]=new InitializeEvent("autogenerated event proxy");}}}}return cls;}};