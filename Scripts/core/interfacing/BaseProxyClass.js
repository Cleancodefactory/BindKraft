function $Managed_BaseProxy(instance,transport,builder,managedContainer){$Root_BaseProxy.apply(this,arguments);this.$transport=transport;this.$instance=instance;this.$builder=builder;this.$container=managedContainer;}$Managed_BaseProxy.Inherit($Root_BaseProxy,"$Managed_BaseProxy");$Managed_BaseProxy.ImplementEx(IManagedInterface);$Managed_BaseProxy.ImplementEx(IDereference);$Managed_BaseProxy.$maxRecursion=10;$Managed_BaseProxy.$notRef=function(arg,_level){var level=_level||1;if(level>this.$maxRecursion)return;var i;if(BaseObject.is(arg,"BaseObject")){throw"References to BK objects not allowed. To enable references mark your interface method appropriately.";}else if(BaseObject.is(arg,"Array")){for(i=0;i<arg.length;i++){this.$notRef(arg[i],level+1);}}else if(BaseObject.is(arg,"object")){for(i in arg){this.$notRef(arg[i],level+1);}}};$Managed_BaseProxy.$notRefs=function(args){for(var i=0;i<args;i++){this.$notRef(args[i]);}};$Managed_BaseProxy.prototype.$buildProxyFromAnother=function(proxy,container){var original=proxy.Dereference();if(original==null)throw"Dereferencing a proxy of type "+proxy.classType()+" produced null result.";if(this.$builder==null)throw"The proxy ("+this.classType()+") does not have a builder set and cannot wrap references.";return this.$builder.buildProxy(original,proxy.$proxiedInterface,container);};$Managed_BaseProxy.prototype.$buildProxyFrom=function(instance,iface,container){if(BaseObject.is(instance,"BaseObject")){if(BaseObject.is(instance,iface)){if(Class.doesextend(iface,"IManagedInterface")){if(this.$builder==null)throw"The proxy ("+this.classType()+") does not have a builder set and cannot wrap references.";return this.$builder.buildProxy(instance,iface,container);}else{throw"The declared interface "+Class.getInterfaceName(iface)+" does not extend IManagedInterface.";}}else{throw"The instance does not support the declared interface: "+Class.getInterfaceName(iface);}}else{$Managed_BaseProxy.$notRef(instance);return instance;}};$Managed_BaseProxy.prototype.$wrapResult=function(r,method){var op,me=this;if(BaseObject.is(r,"$Managed_BaseProxy")){return this.$buildProxyFromAnother(r,this.$container);}else if(BaseObject.is(r,"ChunkedOperation")){op=new ChunkedOperation();r.anychunk(function(success,data){op.ReportOperationChunk(success,me.$wrapResult(data,method));}).then(function(xop){if(xop.isOperationSuccessful()){op.CompleteOperation(true,me.$wrapResult(xop.getOperationResult(),method));}else{op.CompleteOperation(false,xop.getOperationErrorInfo());}});return op;}else if(BaseObject.is(r,"Operation")){op=new Operation();r.then(function(xop){if(xop.isOperationSuccessful()){op.CompleteOperation(true,me.$wrapResult(xop.getOperationResult(),method));}else{op.CompleteOperation(false,xop.getOperationErrorInfo());}});return op;}else if(BaseObject.is(r,"BaseObject")){var rt=Class.returnTypeOf(this.$proxiedInterface,method);if(Class.typeKind(rt)=="interface"){if(BaseObject.is(r,rt)){if(Class.doesextend(rt,"IManagedInterface")){if(this.$builder!=null){return this.$builder.buildProxy(r,rt,this.$container);}else{throw"The proxy ("+this.classType()+") does not have a builder set and cannot wrap the return result of "+method;}}else{throw"The declared return type by "+this.$proxiedInterface.classType+"."+method+" is not IManagedInterface and cannot be wrapped into a local proxy.";}}else{throw"The returned value is not "+rt.classType+" as declared in "+this.$proxiedInterface.classType+"."+method;}}else{throw"The return type declared for "+this.$proxiedInterface.classType+"."+method+" is not an interface and cannot be wrapped in a local proxy.";}}else{$Managed_BaseProxy.$notRef(r);return r;}};$Managed_BaseProxy.prototype.$wrapArguments=function(args,method){var origin=null,container=null,v;var result=[];origin=this.Dereference();if(BaseObject.is(origin,"IHasManagedInterfaceContainer")){container=origin.get_managedinterfacecontainer();}for(var i=0;i<args.length;i++){v=args[i];if(BaseObject.is(v,"$Managed_BaseProxy")){result.push(this.$buildProxyFromAnother(v,container));}else if(BaseObject.is(v,"BaseObject")){var arg_type=Class.argumentOf(this.$proxiedInterface,method,i);if(arg_type==null){throw"Cannot wrap the argument "+i+" of "+method+" because .Arguments describer is not used or does not declare interface for the argument. The type being passed as argument is: "+v.classType();}result.push(this.$buildProxyFrom(v,arg_type,container));}else{$Managed_BaseProxy.$notRef(v);result.push(v);}}return result;};$Managed_BaseProxy.prototype.$eventTranslator=function(argTypes,_args){var args=Array.createCopyOf(arguments,1);for(var i=0;i<args.length;i++){var v=args[i];if(BaseObject.is(v,"$Managed_BaseProxy")){args[i]=this.$buildProxyFromAnother(v,this.$container);}else if(BaseObject.is(v,"BaseObject")){var arg_type=argTypes!=null?argTypes[i]:null;if(arg_type==null){throw"Cannot wrap the argument "+i+" of "+method+" because .Arguments describer is not used or does not declare interface for the argument. The type being passed as argument is: "+v.classType();}args[i]=this.$buildProxyFrom(v,arg_type,this.$container);}else{$Managed_BaseProxy.$notRef(v);args[i]=v;}}return args;};$Managed_BaseProxy.prototype.$initializeProxy=function(){var me=this;if(BaseObject.is(this.$container,"IManagedInterfaceContainer")){me=this.$container.register(this);if(me!=this)return me;}var original=this.Dereference();var trans=null;if(original!=null){for(var key in this){if(this.hasOwnProperty(key)&&BaseObject.is(this[key],"IEventDispatcher")&&BaseObject.is(original[key],"IEventDispatcher")){if(trans==null){trans=new DelegateRev(this,this.$eventTranslator,[Class.eventArgumentsOf(this.$proxiedInterface,key)]);}this[key].set_translator(trans);original[key].add(this[key]);}}}else{this.LASTERROR(_Errors.compose(),"Original not set, the proxy will not fully initialize and will be mostly useless.");}return me;};$Managed_BaseProxy.prototype.Dereference=function(){if(BaseObject.is(this.$instance,this.classType())){return this.$instance.Dereference();}else{return this.$instance;}};$Managed_BaseProxy.prototype.GetInterface=function(iface){if(this.__obliterated)return null;if(this.$instance==null)return null;if(arguments.length==0){return this.$buildProxyFromAnother(this);}else{var ifc=this.$instance.GetInterface(iface);if(BaseObject.is(ifc,iface)){if(BaseObject.is(this.$builder,"IProxyInterfaceBuilder")){var proxiedInstance=this.$builder.buildProxy(ifc,iface,this.$container);return proxiedInstance;}else{throw"Cannot build a proxy for the queried interface becuase no proxy builder was supplied to the proxy marshalling the call";}}}return null;};$Managed_BaseProxy.prototype.Release=function(nocontainer){if(this.__obliterated)return;var instance=this.$instance;this.$instance=null;if(instance!=null){for(var key in this){if(this.hasOwnProperty(key)&&BaseObject.is(this[key],"IEventDispatcher")&&BaseObject.is(instance[key],"IEventDispatcher")){instance[key].remove(this[key]);}}}var container=this.$container;this.$container=null;this.obliterate();if(container!=null&&!nocontainer)container.release(this);};