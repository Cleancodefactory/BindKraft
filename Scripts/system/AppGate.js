function AppGate(shell,lapiclient,appClass,apiHub){BaseObject.apply(this,arguments);this.$shell=shell;this.$api=lapiclient;this.$appClass=appClass;this.$lapiHub=apiHub;this.$container=new LocalProxyContainer();}AppGate.Inherit(BaseObject,"AppGate");AppGate.Implement(IHasManagedInterfaceContainer);AppGate.prototype.get_managedinterfacecontainer=function(){return this.$container;};AppGate.prototype.$arrayRelease=function(){var cont=this.$container;return function(){if(BaseObject.is(this,"Array")){for(var i=0;i<this.length;i++){if(BaseObject.is(this[i],"IManagedInterface")){cont.release(this[i]);}}}};};AppGate.prototype.$container=null;AppGate.prototype.$wrap=function(iface,p){if(BaseObject.is(p,"BaseObject")){var v=DummyInterfaceProxyBuilder.Default().buildProxy(p,iface);if(this.LASTERROR().iserror()){throw"Cannot wrap: "+this.LASTERROR().text();}return v;}else if(BaseObject.is(p,"Array")){var arr=Array.createCopyOf(p);for(var i=0;i<arr.length;i++){if(BaseObject.is(arr[i],"BaseObject")){arr[i]=this.wrap(iface,arr[i]);}}arr.Release=this.$arrayRelease();return arr;}return p;};AppGate.prototype.wrap=function(iface,p,container){if(BaseObject.is(p,"BaseObject")){var v=DummyInterfaceProxyBuilder.Default().buildProxy(p,iface,container);if(this.LASTERROR().iserror()){throw"Cannot wrap: "+this.LASTERROR().text();}return v;}else if(BaseObject.is(p,"Array")){var arr=Array.createCopyOf(p);for(var i=0;i<arr.length;i++){if(BaseObject.is(arr[i],"BaseObject")){arr[i]=this.wrap(iface,arr[i],container);}}return arr;}return p;};AppGate.prototype.release=function(p){this.$container.release(p);};AppGate.prototype.releaseAll=function(){this.$container.releaseAll();this.$api.releaseAll();};AppGate.prototype.api=function(iface){var api=this.$api.getAPI(iface);if(api!=null){return api;}else{this.LASTERROR(_Errors.compose(),"Cannot find API "+Class.getInterfaceName(iface)+" in AppGate of "+Class.getClassName(this.$appClass));}return null;};AppGate.prototype.attachAPI=function(iface,variation){return this.$api.attachAPI(iface,variation);};AppGate.prototype.$registeredLocalAPI=new InitializeArray("Array of API registration cookies for revokation on shutdown");AppGate.prototype.registerLocalAPI=function(iface,instance,variation,bdefault){if(BaseObject.is(this.$lapiHub,"LocalAPI")){var cookie=this.$lapiHub.registerAPI(iface,instance,variation,bdefault);if(cookie!=null){this.$registeredLocalAPI.push({iface:Class.getInterfaceName(iface),cookie:cookie});}}};AppGate.prototype.revokeAllLocalAPI=function(){if(BaseObject.is(this.$lapiHub,"LocalAPI")){while(this.$registeredLocalAPI.length>0){var entry=this.$registeredLocalAPI.pop();this.$lapiHub.revokeAPI(entry.iface,entry.cookie);}}};AppGate.prototype.revokeLocalAPI=function(iface){var entry,ifname=Class.getInterfaceName(iface);if(BaseObject.is(this.$lapiHub,"LocalAPI")){for(var i=this.$registeredLocalAPI.length-1;i>=0;i--){entry=this.$registeredLocalAPI[i];if(entry.iface==ifname){this.$lapiHub.revokeAPI(entry.iface,entry.cookie);this.$registeredLocalAPI.splice(i,1);}}}};AppGate.prototype.runningInstance=function(){return this.$container.register(this.$wrap(IManagedInterface,this.$shell.getAppByClassName(this.$appClass.classType)));};AppGate.prototype.runningInstances=function(){return this.$container.register(this.$wrap(IManagedInterface,this.$shell.getAppsByClassNames(this.$appClass.classType)));};AppGate.prototype.bindAppByClassName=function(className){var app=this.$shell.getAppByClassName(className);if(app!=null){return this.$container.register(this.$wrap(IManagedInterface,app));}return null;};AppGate.prototype.bindAppsByClassNames=function(className1,className2,className3){var classNames=Array.createCopyOf(arguments,1);var apps=this.$shell.getAppsByFilter(function(app){if(classNames.length>0&&!classNames.Any(Predicates.TypeIs(app)))return false;if(BaseObject.is(app,"IManagedInterface"))return true;return false;});return this.$container.register(this.$wrap(IManagedInterface,apps));};AppGate.prototype.bindAppByInstanceId=function(instanceId){var app=this.$shell.getAppByInstanceId(instanceId);if(BaseObject.is(app,"IAppBase")){return this.$container.register(this.$wrap(IManagedInterface,app));}return null;};AppGate.prototype.bindAppByInstanceName=function(instanceName){var apps=this.$shell.getAppsByInstanceName(instanceName);return this.$container.register(this.$wrap(IManagedInterface,apps));};AppGate.prototype.activateApp=function(appproxy){var inst=DummyInterfaceProxyBuilder.Dereferece(appproxy);if(BaseObject.is(inst,"IApp")){return this.$shell.activateApp(inst);}return false;};