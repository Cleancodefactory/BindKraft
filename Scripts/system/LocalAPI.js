function LocalAPI(name){BaseObject.apply(this,arguments);this.$proxybuilder=new DummyInterfaceProxyBuilder();this.$name=name;}LocalAPI.Inherit(BaseObject,"LocalAPI");LocalAPI.genCookie=function(){var g_cookie=0;return function(iface){var ifname=Class.getInterfaceName(iface);if(ifname!=null){return ifname+"_"+g_cookie++;}return null;};}();LocalAPI.prototype.get_name=function(){return this.$name;};LocalAPI.prototype.$apis={};LocalAPI.prototype.registerAPI=function(iface,instance,variation,bdefault){this.LASTERROR().clear();var ifname=Class.getInterfaceName(iface);if(typeof ifname=="string"){if(!this.$apis)this.$apis={};if(this.$apis[ifname]==null){this.$apis[ifname]={};}var reg={proxy:null,cookie:LocalAPI.genCookie(ifname)};var pxy=this.$proxybuilder.buildProxy(instance,Class.getInterfaceDef(iface));if(pxy==null){this.LASTERROR(_Errors.compose(),"Failed to build a proxy. The Local API registration failed for "+ifname);return null;}reg.proxy=pxy;if(typeof variation=="string"){if(this.$apis[ifname][variation]!=null){this.LASTERROR(_Errors.compose(),"this variation is already registered");return null;}else{this.$apis[ifname][variation]=reg;if(this.$apis[ifname]["__$default"]==null||bdefault){this.$apis[ifname]["__$default"]=reg;}}}else if(variation==null){if(this.$apis[ifname]["__$default"]==null){this.$apis[ifname]["__$default"]=reg;}else{this.LASTERROR(_Errors.compose(),"API is already registered as default with this interface.");return null;}}else{this.LASTERROR(_Errors.compose(),"Unsupported variation type - string or null are accepted only");return null;}return reg.cookie;}this.LASTERROR(_Errors.compose(false,null,GeneralCodesFlags.NotFound),"Cannot find the interface");return null;};LocalAPI.prototype.revokeAPI=function(iface,cookie){this.LASTERROR().clear();if(this.$apis!=null){var ifname=Class.getInterfaceName(iface);if(this.$apis[ifname]!=null){var k;for(k in this.$apis[ifname]){var reg=this.$apis[ifname][k];if(reg.cookie!=null&&reg.cookie==cookie){this.$apis[ifname][k]=null;}}return true;}}return false;}.Description("The cookie is returned by registerAPI");LocalAPI.prototype.getAPI=function(iface,variation){this.LASTERROR().clear();if(this.$apis!=null){var ifname=Class.getInterfaceName(iface);if(this.$apis[ifname]!=null){var reg;if(variation==null){reg=this.$apis[ifname]["__$default"];if(reg!=null&&reg.proxy!=null)return reg.proxy;}else{reg=this.$apis[ifname][variation];if(reg!=null&&reg.proxy!=null)return reg.proxy;}}}this.LASTERROR(_Errors.compose(),"API not found");return null;};LocalAPI.Default=function(){var hub=new LocalAPI("default");return function(){return hub;};}();